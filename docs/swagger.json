{
    "swagger": "2.0",
    "info": {
        "description": "API for managing product requirements through hierarchical structure of Epics, User Stories, and Requirements",
        "title": "Product Requirements Management API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/acceptance-criteria/{id}/delete": {
            "delete": {
                "description": "Deletes acceptance criteria with comprehensive validation and cascading deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Delete acceptance criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Acceptance Criteria ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deletion options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.DeleteAcceptanceCriteriaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DeletionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/acceptance-criteria/{id}/validate-deletion": {
            "get": {
                "description": "Validates if acceptance criteria can be deleted and returns dependency information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Validate acceptance criteria deletion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Acceptance Criteria ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DependencyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deletion/confirm": {
            "get": {
                "description": "Provides detailed information for user confirmation before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Get deletion confirmation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity type (epic, user_story, acceptance_criteria, requirement)",
                        "name": "entity_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Entity ID (UUID)",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DependencyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/epics/{id}/delete": {
            "delete": {
                "description": "Deletes an epic with comprehensive validation and cascading deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Delete epic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Epic ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deletion options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.DeleteEpicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DeletionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/epics/{id}/validate-deletion": {
            "get": {
                "description": "Validates if an epic can be deleted and returns dependency information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Validate epic deletion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Epic ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DependencyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/requirements/{id}/delete": {
            "delete": {
                "description": "Deletes a requirement with comprehensive validation and cascading deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Delete requirement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Requirement ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deletion options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.DeleteRequirementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DeletionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/requirements/{id}/validate-deletion": {
            "get": {
                "description": "Validates if a requirement can be deleted and returns dependency information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Validate requirement deletion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Requirement ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DependencyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/search": {
            "get": {
                "description": "Performs full-text search and filtering across epics, user stories, acceptance criteria, and requirements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search across all entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query text",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creator ID (UUID)",
                        "name": "creator_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by assignee ID (UUID)",
                        "name": "assignee_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by priority (1-4)",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation date from (RFC3339 format)",
                        "name": "created_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation date to (RFC3339 format)",
                        "name": "created_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by epic ID (UUID)",
                        "name": "epic_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user story ID (UUID)",
                        "name": "user_story_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by acceptance criteria ID (UUID)",
                        "name": "acceptance_criteria_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by requirement type ID (UUID)",
                        "name": "requirement_type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by author ID (UUID)",
                        "name": "author_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at",
                        "description": "Sort by field (priority, created_at, last_modified, title)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Sort order (asc, desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit number of results (max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/search/suggestions": {
            "get": {
                "description": "Get search suggestions based on partial query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get search suggestions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partial search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of suggestions",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user-stories/{id}/delete": {
            "delete": {
                "description": "Deletes a user story with comprehensive validation and cascading deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Delete user story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Story ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deletion options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.DeleteUserStoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DeletionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user-stories/{id}/validate-deletion": {
            "get": {
                "description": "Validates if a user story can be deleted and returns dependency information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deletion"
                ],
                "summary": "Validate user story deletion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Story ID (UUID or reference ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product-requirements-management_internal_service.DependencyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_handlers.DeleteAcceptanceCriteriaRequest": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.DeleteEpicRequest": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.DeleteRequirementRequest": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.DeleteUserStoryRequest": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/internal_handlers.ErrorDetail"
                }
            }
        },
        "product-requirements-management_internal_service.CascadeDeletePreview": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "product-requirements-management_internal_service.CascadeDeletedEntity": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                }
            }
        },
        "product-requirements-management_internal_service.DeletionResult": {
            "type": "object",
            "properties": {
                "audit_log_id": {
                    "type": "string"
                },
                "cascade_deleted": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product-requirements-management_internal_service.CascadeDeletedEntity"
                    }
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "product-requirements-management_internal_service.DependencyDetail": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "product-requirements-management_internal_service.DependencyInfo": {
            "type": "object",
            "properties": {
                "can_delete": {
                    "type": "boolean"
                },
                "cascade_delete_count": {
                    "type": "integer"
                },
                "cascade_delete_entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product-requirements-management_internal_service.CascadeDeletePreview"
                    }
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product-requirements-management_internal_service.DependencyDetail"
                    }
                },
                "requires_confirmation": {
                    "type": "boolean"
                }
            }
        },
        "product-requirements-management_internal_service.SearchResponse": {
            "type": "object",
            "properties": {
                "executed_at": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product-requirements-management_internal_service.SearchResult"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "product-requirements-management_internal_service.SearchResult": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "reference_id": {
                    "type": "string"
                },
                "relevance": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "description": "epic, user_story, acceptance_criteria, requirement",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}